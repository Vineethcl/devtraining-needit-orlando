<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>ni_getinfo (v2)</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here
    var requestUserID = request.pathParams.user_name;
	var queryParameter = request.queryParams.ni_query;

    var userInfo = new GlideRecord("sys_user");
    userInfo.get("user_name",requestUserID);
	if(!userInfo.user_name){
		var apiError = new sn_ws_err.ServiceError();
		apiError.setStatus(542);
		apiError.setMessage("User not found");
		apiError.setDetail("No user record found for the user_name passed into the ni_info web service resource using the user_name path parameter.");
		response.setError(apiError);
		return;
	}
	

    var needITReq = new GlideAggregate("x_58872_needit_needit");
    needITReq.addAggregate("COUNT");
    needITReq.addQuery('u_requested_for', userInfo.sys_id);
	needITReq.addEncodedQuery(queryParameter);
    needITReq.groupBy('u_request_type');
    needITReq.query();
    var totalNeedITRequest = 0;
    var needITRequestByCategory = [];
    var needITRequestCatCount = 0;
    while (needITReq.next()) {
        needITRequestCatCount = needITReq.getAggregate("COUNT");
        var needITReqType = needITReq.u_request_type.getDisplayValue();
        needITRequestByCategory.push({
            "requestType": needITReqType,
            "count": needITRequestCatCount
        });
        totalNeedITRequest = parseInt(totalNeedITRequest) + parseInt(needITRequestCatCount);
    }
    var body = {};
    body.totalUserNIRecs = totalNeedITRequest;
    body.catCounts = needITRequestByCategory;
    body.user = {
        userName: userInfo.user_name,
        userID: userInfo.sys_id

    };

    response.setBody(body);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_58872_needit/v2/needit_api/nigetinfo/{user_name}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/nigetinfo/{user_name}</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description>Find the NeedIt active NeedIt records for a user. Group by What needed.</short_description>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>Vineet</sys_created_by>
        <sys_created_on>2021-03-08 14:23:32</sys_created_on>
        <sys_id>614617492fb2201051c4a55df699b6da</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>ni_getinfo (v2)</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_ws_operation_614617492fb2201051c4a55df699b6da</sys_update_name>
        <sys_updated_by>Vineet</sys_updated_by>
        <sys_updated_on>2021-03-08 14:35:16</sys_updated_on>
        <web_service_definition display_value="NeedIt API">c777be722f22201051c4a55df699b6f5</web_service_definition>
        <web_service_version display_value="v2">ed4617492fb2201051c4a55df699b6d7</web_service_version>
    </sys_ws_operation>
</record_update>
